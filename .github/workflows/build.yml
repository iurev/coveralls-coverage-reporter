name: Build

on:
  pull_request:
    branches:
      - master
      - sr-64-github-action-coverage-reporter-crashing-on-windows
  push:
    tags:
      - 'v*'


permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-2022
    steps:
      # If this step breaks, try inspecting MSVC directory and consider changing appropriate paths.
      #
      #   ls 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\'
      #
      # Since windows runner can be updated the version can change in future releases.
      - name: Install SQLite3 + generate sqlite3.lib
        run: |
          choco install sqlite -y
          cd C:\ProgramData\chocolatey\lib\SQLite\tools
          ls 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\'
          & 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\bin\Hostx64\x64\lib.exe' /DEF:sqlite3.def /OUT:sqlite3.lib /MACHINE:x64

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: 1.9

      - run: shards install --production

      - name: Set path and build
        run: |
          $env:CRYSTAL_LIBRARY_PATH = (crystal env CRYSTAL_LIBRARY_PATH) + ";C:\ProgramData\chocolatey\lib\SQLite\tools"
          crystal build src\cli.cr -o dist\coveralls --release --static --no-debug --progress -Dpreview_win32_delay_load

      - name: copy dll and zip
        run: |
          cd dist
          cp "C:\ProgramData\chocolatey\lib\SQLite\tools\sqlite3.dll" sqlite3.dll
          tar -acf coveralls-windows.zip coveralls.exe sqlite3.dll

      - name: Upload exe
        uses: actions/upload-artifact@v3
        with:
          name: coveralls-windows.exe
          path: dist/coveralls.exe
          if-no-files-found: error

      - name: Upload sqlite3.dll
        uses: actions/upload-artifact@v3
        with:
          name: sqlite3.dll
          path: dist/sqlite3.dll
          if-no-files-found: error

      - name: Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: coveralls-windows.zip
          path: dist/coveralls-windows.zip
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: 1.9

      - name: Build (Linux)
        run: make release_linux

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: coveralls-linux
          path: dist/coveralls
          if-no-files-found: error

      - name: Upload tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: coveralls-linux.tar.gz
          path: dist/coveralls-linux.tar.gz
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Prepare files for release
        run: |
          mkdir release/
          find artifacts/ -type f -exec cp \{} release/ \;
          cd release/
          mv coveralls coveralls-linux
          mv coveralls.exe coveralls-windows.exe
          sha256sum * > coveralls-checksums.txt

      - name: Create Github release
        env:
          TAG: ${{ github.ref }}
          GH_TOKEN: ${{ github.token }}
        run: >
          cd release/;
          gh release create ${TAG}
          'coveralls-linux#coveralls-linux'
          'coveralls-linux.tar.gz#coveralls-linux.tar.gz'
          'coveralls-windows.exe#coveralls-windows.exe'
          'coveralls-windows.zip#coveralls-windows.zip'
          'sqlite3.dll#sqlite3.dll'
          'coveralls-checksums.txt#coveralls-checksums.txt'
          --generate-notes

  homebrew:
    runs-on: ubuntu-latest
    needs: [release]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Update Homebrew formula
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          tap: coverallsapp/coveralls
          formula: coveralls
          token: ${{ secrets.HOMEBREW_TOKEN }}

